[3, 4, 5], # middle row
[6, 7, 8], # bottom row
[0, 4, 8], # diagonal l/r
[2, 4, 6], # diagonal r/l
[0, 3, 6], # left column
[1, 4, 7], # middle column
[2, 5, 8]  # right column

---

win_index_2 = WIN_COMBINATIONS[1]
win_index_3 = WIN_COMBINATIONS[2]
win_index_4 = WIN_COMBINATIONS[3]
win_index_5 = WIN_COMBINATIONS[4]
win_index_6 = WIN_COMBINATIONS[5]
win_index_7 = WIN_COMBINATIONS[6]
win_index_8 = WIN_COMBINATIONS[7]

---

position_2 = board[win_index_2]
position_3 = board[win_index_3]
position_4 = board[win_index_4]
position_5 = board[win_index_5]
position_6 = board[win_index_6]
position_7 = board[win_index_7]
position_8 = board[win_index_8]

---


if position_1 == "X" && position_2 == "X" && position_3 == "X"
  return win_index_1
else
  false
end

def position_taken?(board, index)
  !(board[index].nil? || board[index] == " ")
end

#if position_1 == "X" && position_2 == "X" && position_3 == "X"
#  return win_combination[0]
---

board = [  [" ", " ", " ", " ", " ", " ", " ", " ", " "],  [ [0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 4, 8], [2, 4, 6], [0, 3, 6], [1, 4, 7], [2, 5, 8] ]  ]
    # board[1][1][2] => 5
